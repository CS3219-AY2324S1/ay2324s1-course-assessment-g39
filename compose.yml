include:
  - judge0-v1.13.0/docker-compose.yml
services:
  # app:
  #   platform: "linux/amd64"
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   working_dir: /app
  #   ports:
  #     - "3000:3000"
  #     - "3002:3002"
  #   image: t3-app
  postgres_db:
    image: postgres:12.16
    container_name: postgresdb-dev
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: "db"
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
  mongo_db:
    image: mongo:7.0.0
    container_name: mongodb-dev
    command: ["--replSet", "rs0", "--bind_ip_all"]
    restart: always
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
    #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
      - ./.docker/mongo/rs-initiate.js:/docker-entrypoint-initdb.d/rs-initiate.js
      # - ./.docker/mongo/replica.key:/data/replica.key
  s3-bucket:
    build: ./s3/
    restart: always
    ports:
      - 9000:9000
    environment:
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
    volumes:
      - "./data/s3:/home/app/public/peer-prep"
  rabbitmq:
    image: rabbitmq:3.11.23-management-alpine
    restart: always
    container_name: "rabbitmq-dev"
    ports:
      - 5672:5672
      - 15672:15672
      - 15674:15674
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    command: sh -c "rabbitmq-plugins enable rabbitmq_web_stomp && rabbitmq-server"

    networks:
      - rabbitmq_go_net
networks:
  rabbitmq_go_net:
    driver: bridge
